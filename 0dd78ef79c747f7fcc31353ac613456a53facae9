{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0b47813a_b200e772",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1386032
      },
      "writtenOn": "2021-06-01T09:44:23Z",
      "side": 1,
      "message": "Ideally we also want to replace the non-pooled heap usage to the dmabuf one (I do understand given the current interface it\u0027s likely not possible in the lmkd context).",
      "revId": "0dd78ef79c747f7fcc31353ac613456a53facae9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5c6342d_8b1c48f5",
        "filename": "lmkd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 384,
      "author": {
        "id": 1323232
      },
      "writtenOn": "2021-05-30T17:00:04Z",
      "side": 1,
      "message": "May I know what is difference between MI_ION_HEAP and MI_ION_HEAP_POOL when we are switching to dma_buf interface? Thanks.",
      "range": {
        "startLine": 383,
        "startChar": 0,
        "endLine": 384,
        "endChar": 21
      },
      "revId": "0dd78ef79c747f7fcc31353ac613456a53facae9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b3c98e4_bd0b4609",
        "filename": "lmkd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 384,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-05-30T19:17:50Z",
      "side": 1,
      "message": "dmabuf buffers are allocated from a dmabuf heap and then when they are freed the driver might decide to keep them allocated in case new allocation is required soon. In this case the buffers are placed in dmabuf heap pool. So it\u0027s buffers allocated but currently unused by anyone.",
      "parentUuid": "c5c6342d_8b1c48f5",
      "range": {
        "startLine": 383,
        "startChar": 0,
        "endLine": 384,
        "endChar": 21
      },
      "revId": "0dd78ef79c747f7fcc31353ac613456a53facae9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6570842e_14a6a2ac",
        "filename": "lmkd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1931,
      "author": {
        "id": 1386032
      },
      "writtenOn": "2021-06-01T09:44:23Z",
      "side": 1,
      "message": "Can we do this in kill_one_process, right before we call killinfo_log? It will be easier to log the same value in other places if required (e.g. statsd).",
      "range": {
        "startLine": 1931,
        "startChar": 0,
        "endLine": 1931,
        "endChar": 66
      },
      "revId": "0dd78ef79c747f7fcc31353ac613456a53facae9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eb11d12_e22b19f6",
        "filename": "lmkd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1931,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-06-01T15:18:24Z",
      "side": 1,
      "message": "Good point. I\u0027ll do this in meminfo_parse().",
      "parentUuid": "6570842e_14a6a2ac",
      "range": {
        "startLine": 1931,
        "startChar": 0,
        "endLine": 1931,
        "endChar": 66
      },
      "revId": "0dd78ef79c747f7fcc31353ac613456a53facae9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "563479d0_e3ff25a5",
        "filename": "lmkd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1931,
      "author": {
        "id": 1386032
      },
      "writtenOn": "2021-06-01T15:25:11Z",
      "side": 1,
      "message": "meminfo_parse would work too, but then this will be in the critical path for the kill (which is why I suggested the kill_one_process, post-kill).",
      "parentUuid": "3eb11d12_e22b19f6",
      "range": {
        "startLine": 1931,
        "startChar": 0,
        "endLine": 1931,
        "endChar": 66
      },
      "revId": "0dd78ef79c747f7fcc31353ac613456a53facae9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eabf17b_8503ddc2",
        "filename": "lmkd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1931,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-06-01T16:01:40Z",
      "side": 1,
      "message": "The issue with post-kill (which is what is done here as well) is that there is no guarantee that the memory allocations won\u0027t go away before we capture them. So, if we want to report always correct values pre-kill capture is needed.",
      "parentUuid": "563479d0_e3ff25a5",
      "range": {
        "startLine": 1931,
        "startChar": 0,
        "endLine": 1931,
        "endChar": 66
      },
      "revId": "0dd78ef79c747f7fcc31353ac613456a53facae9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22a91a79_d2b1e144",
        "filename": "lmkd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1931,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-06-01T18:09:35Z",
      "side": 1,
      "message": "I\u0027ll run some measurements to check if these sysfs/bpf reads might cause slowdown before the kill.",
      "parentUuid": "8eabf17b_8503ddc2",
      "range": {
        "startLine": 1931,
        "startChar": 0,
        "endLine": 1931,
        "endChar": 66
      },
      "revId": "0dd78ef79c747f7fcc31353ac613456a53facae9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}