{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fce4db88_0c664408",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-02-04T01:42:01Z",
      "side": 1,
      "message": "Migrating memcg to cgroups v2 is a much bigger task.\nInstead of changing one hardcoded path to another we should be using API functions CgroupGetControllerPath() and CgroupGetAttributePath() from https://cs.android.com/android/platform/superproject/+/master:system/core/libprocessgroup/include/processgroup/processgroup.h.\n\nI added some comments with links to clarify that. In couple places I suggest using CgroupGetAttributePathForTask(). It would work but I plan to introduce a new function CgroupGetAttributePathForProcess() which will accept uid and pid and be more applicable for these usecases.\n",
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b42d5a4_d4bd058c",
        "filename": "liblmkd_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-02-04T01:42:01Z",
      "side": 1,
      "message": "This function should replicate what createProcessGroup() does here: https://cs.android.com/android/platform/superproject/+/master:system/core/libprocessgroup/processgroup.cpp;l\u003d485 using CgroupGetControllerPath() for get the path to either \"memory\" cgroup (for the case v1 hierarchy is used) or CGROUPV2_CONTROLLER_NAME (for v2 hierarchy).",
      "range": {
        "startLine": 80,
        "startChar": 4,
        "endLine": 80,
        "endChar": 16
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ceecca65_f0657fea",
        "filename": "liblmkd_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-02-08T17:13:58Z",
      "side": 1,
      "message": "lmkd is independent of libprocessgroup. I want to keep lmkd independent because the approach of both software components is different: for lmkd it is important not to trigger any page faults when resolving an out-of-memory condition while allocating memory from libprocessgroup is fine.",
      "parentUuid": "0b42d5a4_d4bd058c",
      "range": {
        "startLine": 80,
        "startChar": 4,
        "endLine": 80,
        "endChar": 16
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2684fb13_ed3c35d7",
        "filename": "liblmkd_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-02-14T23:46:09Z",
      "side": 1,
      "message": "Lmkd already links to libprocessgroup: https://cs.android.com/android/platform/superproject/+/master:system/memory/lmkd/Android.bp;l\u003d23. I wish we didn\u0027t have that dependency but since we have to have it, there is no reason to share the code.",
      "parentUuid": "ceecca65_f0657fea",
      "range": {
        "startLine": 80,
        "startChar": 4,
        "endLine": 80,
        "endChar": 16
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0b8ed5f_76a3309c",
        "filename": "liblmkd_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-02-14T23:46:51Z",
      "side": 1,
      "message": "I meant to say \"there is no reason not to share the code\"",
      "parentUuid": "2684fb13_ed3c35d7",
      "range": {
        "startLine": 80,
        "startChar": 4,
        "endLine": 80,
        "endChar": 16
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "586b4872_34d7d575",
        "filename": "lmkd.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1183,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-02-04T01:42:01Z",
      "side": 1,
      "message": "This should be a combination of MemSoftLimit attribute https://cs.android.com/android/platform/superproject/+/master:system/core/libprocessgroup/profiles/task_profiles.json;l\u003d26 and CgroupGetAttributePathForTask().",
      "range": {
        "startLine": 1182,
        "startChar": 7,
        "endLine": 1183,
        "endChar": 29
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "109512be_007b9b11",
        "filename": "lmkd.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1183,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-02-08T17:13:58Z",
      "side": 1,
      "message": "lmkd is independent of libprocessgroup. I want to keep lmkd independent because the approach of both software components is different: for lmkd it is important not to trigger any page faults when resolving an out-of-memory condition while allocating memory from libprocessgroup is fine.",
      "parentUuid": "586b4872_34d7d575",
      "range": {
        "startLine": 1182,
        "startChar": 7,
        "endLine": 1183,
        "endChar": 29
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16eb3b98_27870b55",
        "filename": "lmkd.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1183,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-02-14T23:46:09Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "109512be_007b9b11",
      "range": {
        "startLine": 1182,
        "startChar": 7,
        "endLine": 1183,
        "endChar": 29
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f70ff8b1_083617c9",
        "filename": "lmkd.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2788,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-02-04T01:42:01Z",
      "side": 1,
      "message": "Vendors can chose to override default cgroup.json file from the vendor partition, mount memcg v1 and keep using the old strategy (some vendors do use it). We can\u0027t discount that case. If we could then we would simply remove this code.",
      "range": {
        "startLine": 2788,
        "startChar": 0,
        "endLine": 2788,
        "endChar": 5
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45d1e393_e313ed7c",
        "filename": "lmkd.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2788,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-02-08T17:13:58Z",
      "side": 1,
      "message": "I have modified this patch such that lmkd now supports both the v1 and v2 cgroup hierarchies.",
      "parentUuid": "f70ff8b1_083617c9",
      "range": {
        "startLine": 2788,
        "startChar": 0,
        "endLine": 2788,
        "endChar": 5
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a2d23a0_0f109d1d",
        "filename": "statslog.h",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-02-04T01:42:01Z",
      "side": 1,
      "message": "This would require a new attribute definition similar to here: https://cs.android.com/android/platform/superproject/+/master:system/core/libprocessgroup/profiles/task_profiles.json;l\u003d26 and CgroupGetAttributePathForTask().",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 95,
        "endChar": 81
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8da4228_015f849c",
        "filename": "statslog.h",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-02-08T17:13:58Z",
      "side": 1,
      "message": "lmkd is independent of libprocessgroup. I want to keep lmkd independent because the approach of both software components is different: for lmkd it is important not to trigger any page faults when resolving an out-of-memory condition while allocating memory from libprocessgroup is fine.",
      "parentUuid": "1a2d23a0_0f109d1d",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 95,
        "endChar": 81
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb6089a0_3e565072",
        "filename": "statslog.h",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-02-14T23:46:09Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "a8da4228_015f849c",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 95,
        "endChar": 81
      },
      "revId": "0cef13b5028f30dedc4d35fb2d227399e567aef3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}