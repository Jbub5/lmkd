{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bef517a7_3c63aefa",
        "filename": "statslog.cpp",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2023-08-05T00:08:09Z",
      "side": 1,
      "message": "why is this one hardcoded?\nIf we don\u0027t really need a page_sized buffer here maybe we can use something smaller?",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 23
      },
      "revId": "65e043fe9d9e12e6ff329c98aabf30119ff01c17",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06f9c5a2_c24f4751",
        "filename": "statslog.cpp",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2023-08-05T00:41:42Z",
      "side": 1,
      "message": "IIUC it only needs to be as long as the longest line from the  file.\n\nOr we can use something like getline instead.",
      "parentUuid": "bef517a7_3c63aefa",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 23
      },
      "revId": "65e043fe9d9e12e6ff329c98aabf30119ff01c17",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82119e32_d0b66b1f",
        "filename": "statslog.cpp",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2023-08-05T00:57:58Z",
      "side": 1,
      "message": "Change it to use getline.",
      "parentUuid": "06f9c5a2_c24f4751",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 23
      },
      "revId": "65e043fe9d9e12e6ff329c98aabf30119ff01c17",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0217233b_651c2082",
        "filename": "statslog.cpp",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2023-08-08T22:38:19Z",
      "side": 1,
      "message": "Let\u0027s not use std::string which can dynamically allocate memory. The lines in memory.stat are not long, so LINE_MAX should be fine.",
      "parentUuid": "82119e32_d0b66b1f",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 23
      },
      "revId": "65e043fe9d9e12e6ff329c98aabf30119ff01c17",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dc41f6b_2fb3888e",
        "filename": "statslog.cpp",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2023-08-08T22:52:47Z",
      "side": 1,
      "message": "I think that works, but it doesn\u0027t account for the characters of the key\u0027s value since both LINE_MAX and MAX_TASKNAME_LEN are 128.\n\n```\n#define LINE_MAX 128\n\n#define MAX_TASKNAME_LEN 128\n\nmemory_stat_parse_line\n  -\u003e sscanf(line, \"%\" STRINGIFY(MAX_TASKNAME_LEN) \"s  %\" SCNd64 \"\", key, \u0026value);\n```\n\nIt should be ok though since the largest key is \"total_pgmajfault\" (16 chars).",
      "parentUuid": "0217233b_651c2082",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 23
      },
      "revId": "65e043fe9d9e12e6ff329c98aabf30119ff01c17",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}