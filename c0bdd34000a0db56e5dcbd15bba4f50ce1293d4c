{
  "comments": [
    {
      "key": {
        "uuid": "1675c354_94a13c0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-24T00:46:38Z",
      "side": 1,
      "message": "This fixes CMA handling for the legacy algorithm.",
      "revId": "c0bdd34000a0db56e5dcbd15bba4f50ce1293d4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b8cda1f_cf453fb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2020-09-14T14:09:24Z",
      "side": 1,
      "message": "CMA free page depends on allocation context.\n\nIf allocation is under userspace memory(e.g., anonymous or file-backed LRU pages), we don\u0027t need to subtract cma_free pages from nr_free_pages. IOW, this CL makes more aggressive killing even though we have enough free pages. Furthermore, such allocation context is dominant in the system rather than other kernel allocation context.\n\nSince I see this is fundamental problem of userspace out of memory killer because it couldn\u0027t know allocation context, unfortunately, I have no idea to fix it properly.",
      "revId": "c0bdd34000a0db56e5dcbd15bba4f50ce1293d4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea735ed2_883c93f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-09-14T16:19:04Z",
      "side": 1,
      "message": "Until we have a separate CMA zone this will be an issue and there is no perfect solution. In R we decided to be on a safe side and disregard CMA free pages. This CL brings Q in-line with R.",
      "parentUuid": "6b8cda1f_cf453fb9",
      "revId": "c0bdd34000a0db56e5dcbd15bba4f50ce1293d4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d305147f_0f4a0086",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2020-09-14T16:32:18Z",
      "side": 1,
      "message": "How could it be solved in CMA zone?",
      "parentUuid": "ea735ed2_883c93f7",
      "revId": "c0bdd34000a0db56e5dcbd15bba4f50ce1293d4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40a4def2_66aa8a5a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-09-14T16:55:12Z",
      "side": 1,
      "message": "I was thinking about discarding it when we read zoneinfo. But on the second thought, that would be the same as subtracting cma_free from nr_free_pages like we do in this CL. You are right, there is no perfect fix for that as long as we use free memory to make kill decisions.\nI still think that discarding CMA in this calculation in a safer approach. It\u0027s true that this can make lmkd more aggressive when considerable amount of memory is under CMA but in that case I think userspace allocations should successfully allocate from that reserve and not generate PSI event.",
      "parentUuid": "d305147f_0f4a0086",
      "revId": "c0bdd34000a0db56e5dcbd15bba4f50ce1293d4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4bc688f_9f1f35af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2020-09-14T17:26:15Z",
      "side": 1,
      "message": "I don\u0027t have any strong opinion about this because we don\u0027t have logical solution here. Rather than, I\u0027d like to make it clear reason/side-effects in the description so others can follow the policy or create better idea afterward to fix it.\n\n\"Since we couldn\u0027t know allocation context in userspace, there is no perfect solution. We choose safer way via killing more aggressively so don\u0027t be surprised if you see kill with enough free memory\" \n\n\nFeel free to update it.",
      "parentUuid": "40a4def2_66aa8a5a",
      "revId": "c0bdd34000a0db56e5dcbd15bba4f50ce1293d4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}