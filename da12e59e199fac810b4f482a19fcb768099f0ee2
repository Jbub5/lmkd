{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1d6d1ff4_950b11e1",
        "filename": "lmkd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2364,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2021-06-02T17:02:56Z",
      "side": 1,
      "message": "can we use libbase in lmkd?",
      "range": {
        "startLine": 2360,
        "startChar": 3,
        "endLine": 2364,
        "endChar": 47
      },
      "revId": "da12e59e199fac810b4f482a19fcb768099f0ee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a67a9266_42e5a4bf",
        "filename": "lmkd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2364,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-06-02T17:44:41Z",
      "side": 1,
      "message": "You can use reread_file() in order to avoid opening/closing the same file each time you need to read it:\n\nstatic struct reread_data file_data \u003d {\n    .filename \u003d WATERMARK_BOOST_PATH,\n    .fd \u003d -1,\n};\n\nif ((buf \u003d reread_file(\u0026file_data)) \u003d\u003d NULL) {\n    return false;\n}\n...",
      "range": {
        "startLine": 2364,
        "startChar": 10,
        "endLine": 2364,
        "endChar": 18
      },
      "revId": "da12e59e199fac810b4f482a19fcb768099f0ee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d147c3dd_e0116457",
        "filename": "lmkd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2364,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-06-02T17:44:41Z",
      "side": 1,
      "message": "It\u0027s not from libbase. It\u0027s define at L569.",
      "parentUuid": "1d6d1ff4_950b11e1",
      "range": {
        "startLine": 2360,
        "startChar": 3,
        "endLine": 2364,
        "endChar": 47
      },
      "revId": "da12e59e199fac810b4f482a19fcb768099f0ee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fe9d452_f868b7f9",
        "filename": "lmkd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2371,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-06-02T17:44:41Z",
      "side": 1,
      "message": "use parse_int64() instead. sscanf is an order of magnitude less efficient.",
      "range": {
        "startLine": 2371,
        "startChar": 4,
        "endLine": 2371,
        "endChar": 10
      },
      "revId": "da12e59e199fac810b4f482a19fcb768099f0ee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c3a57e2_417e481c",
        "filename": "lmkd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2373,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-06-02T17:44:41Z",
      "side": 1,
      "message": "space",
      "range": {
        "startLine": 2373,
        "startChar": 6,
        "endLine": 2373,
        "endChar": 7
      },
      "revId": "da12e59e199fac810b4f482a19fcb768099f0ee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe631c74_907e977c",
        "filename": "lmkd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2535,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-06-02T17:44:41Z",
      "side": 1,
      "message": "hmm. This means when watermark_boost is enabled we will be updating watermarks on each wakeup as long as has_watermark_boost\u003d\u003dtrue. I think you want to update only on transitions, isn\u0027t it?",
      "range": {
        "startLine": 2535,
        "startChar": 38,
        "endLine": 2535,
        "endChar": 57
      },
      "revId": "da12e59e199fac810b4f482a19fcb768099f0ee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}