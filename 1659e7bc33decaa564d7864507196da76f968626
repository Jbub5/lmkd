{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b623d27e_3bc834f8",
        "filename": "Android.bp",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2024-03-07T22:48:13Z",
      "side": 1,
      "message": "I\u0027m worried about the growth in size after this change. Please check lmkd RSS before and after this change. I wonder if there is a way to avoid linking this library which I expect to be quite sizable.\n\nI think waitForProgsLoaded() simply checks `bpf.progs_loaded` system property in a loop until it gets set, so it should be easy to implement it without linking the whole library in case it adds considerable size.",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 16
      },
      "revId": "1659e7bc33decaa564d7864507196da76f968626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69f8698d_1b01f755",
        "filename": "Android.bp",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1956645
      },
      "writtenOn": "2024-03-13T19:54:55Z",
      "side": 1,
      "message": "VmLck:  10769680 kB (without `libbase`)\nVmLck:  10845456 kB  (with the only `libbase`)\n~0.7% increase in size\n\nNot sure if this is considered a significant increase? What action should we take?",
      "parentUuid": "b623d27e_3bc834f8",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 16
      },
      "revId": "1659e7bc33decaa564d7864507196da76f968626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5fbeb41_31ef9884",
        "filename": "Android.bp",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2024-03-13T20:03:09Z",
      "side": 1,
      "message": "Let\u0027s look at Rss. VmLck is referring to the virtual memory size.",
      "parentUuid": "69f8698d_1b01f755",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 16
      },
      "revId": "1659e7bc33decaa564d7864507196da76f968626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a315301e_59739ed0",
        "filename": "Android.bp",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1956645
      },
      "writtenOn": "2024-03-15T22:15:55Z",
      "side": 1,
      "message": "Rss: 3984K (without `libbase`)\nRss: 4060K (with `libbase`)\n76K RSS (~1.91%) increase",
      "parentUuid": "c5fbeb41_31ef9884",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 16
      },
      "revId": "1659e7bc33decaa564d7864507196da76f968626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd52e412_e37f0a8d",
        "filename": "lmkd.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2853,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2024-03-07T22:48:13Z",
      "side": 1,
      "message": "Currently this patch does several things: adds support to listen for libmemevents and introduces a new kill reason. Let\u0027s separate the new kill reason into its own patch.",
      "range": {
        "startLine": 2849,
        "startChar": 4,
        "endLine": 2853,
        "endChar": 45
      },
      "revId": "1659e7bc33decaa564d7864507196da76f968626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03c2961e_622663df",
        "filename": "lmkd.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2853,
      "author": {
        "id": 1956645
      },
      "writtenOn": "2024-03-13T06:43:04Z",
      "side": 1,
      "message": "Done. This change is left as new kill reason, and aosp/3001286 adds the support for memevents and direct reclaim monitoring.",
      "parentUuid": "bd52e412_e37f0a8d",
      "range": {
        "startLine": 2849,
        "startChar": 4,
        "endLine": 2853,
        "endChar": 45
      },
      "revId": "1659e7bc33decaa564d7864507196da76f968626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "576fdf56_67f6d3cf",
        "filename": "lmkd.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3271,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2024-03-07T22:48:13Z",
      "side": 1,
      "message": "Can this vector contain multiple events?",
      "range": {
        "startLine": 3271,
        "startChar": 8,
        "endLine": 3271,
        "endChar": 17
      },
      "revId": "1659e7bc33decaa564d7864507196da76f968626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd45c6ec_b0b4f651",
        "filename": "lmkd.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3271,
      "author": {
        "id": 1956645
      },
      "writtenOn": "2024-03-13T06:43:04Z",
      "side": 1,
      "message": "Yes, the vector can contain multiple registered events. By the time we fetch the memevents from the bpf rb, we might\u0027ve gone in/out of direct reclaim, which would be reflected more than one event in the vector.\n\nDue to this we always use the the last/latest event as the last known direct reclaims state to make mitigate for this case.",
      "parentUuid": "576fdf56_67f6d3cf",
      "range": {
        "startLine": 3271,
        "startChar": 8,
        "endLine": 3271,
        "endChar": 17
      },
      "revId": "1659e7bc33decaa564d7864507196da76f968626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}