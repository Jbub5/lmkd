{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c1bf760c_1aa47356",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "I hope we can disconnect dependency main thread and reaper thread if possible.\nOnce it figures out, will review further. ",
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e49bf52b_e549b017",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2126,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "Why couldn\u0027t we move this into reaper?  Can\u0027t we disconnect dependency main thread and reaper thread?",
      "range": {
        "startLine": 2123,
        "startChar": 0,
        "endLine": 2126,
        "endChar": 5
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fe0d87b_f4fb43fe",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2126,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-29T21:59:48Z",
      "side": 1,
      "message": "I\u0027m unclear what you want to move into reaper?\nkill_fail_handler is the function which is called when reaper thread wants to report to the main thread that kill has failed. If we want to move this whole logic into reaper thread then we would have to introduce additional locking and teach reaper about main thread\u0027s internal structures are variables. stop_wait_for_proc_kill() operates on variables like last_kill_pid_or_fd and epollfd used by the main thread only. If you are suggesting to call it from the reaper thread then we would need to introduce additional locks here and provide reaper thread access to these variable. I think that would introduce more dependencies instead of reducing them.",
      "parentUuid": "e49bf52b_e549b017",
      "range": {
        "startLine": 2123,
        "startChar": 0,
        "endLine": 2126,
        "endChar": 5
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b99b95a7_7eb1b46d",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2126,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T23:34:59Z",
      "side": 1,
      "message": "What reaper is doing just returns pid and main thread just prints it as error. Since reaper could know when it fail, I think we can move the report logic into reaper and keep only stop_wait_for_proc_kill and poll_params-\u003eupdate here in main thread. With that, we could get rid of get_failed_kill_pid function.",
      "parentUuid": "6fe0d87b_f4fb43fe",
      "range": {
        "startLine": 2123,
        "startChar": 0,
        "endLine": 2126,
        "endChar": 5
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be05d01c_f98bd367",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2126,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T00:05:34Z",
      "side": 1,
      "message": "Oh, I see what you mean. Just moving the ALOGE(\"Failed to kill process %d\", pid); into the reaper thread. Yes, we can do that.",
      "parentUuid": "b99b95a7_7eb1b46d",
      "range": {
        "startLine": 2123,
        "startChar": 0,
        "endLine": 2126,
        "endChar": 5
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91830761_a7d3a235",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2126,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-01-02T20:49:04Z",
      "side": 1,
      "message": "Now I remember the additional function of get_failed_kill_pid(). It\u0027s used to read the data from the communication pipe and clear the data so that epoll_wait() can sleep. Sort of acknowledgement that the notification was received.",
      "parentUuid": "be05d01c_f98bd367",
      "range": {
        "startLine": 2123,
        "startChar": 0,
        "endLine": 2126,
        "endChar": 5
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dacb93b1_897af64c",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2214,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "If we decouple main thread and reaper thread, we don\u0027t need to pass two id for a single process, I guess. I might be wrong. If we really need both, let\u0027s abstract it to a single structure instead of two parameters. \n\nstruct target_proc {\n  int pid;\n  int pid_fd;\n}",
      "range": {
        "startLine": 2214,
        "startChar": 32,
        "endLine": 2214,
        "endChar": 42
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "625a39a3_179cad85",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2214,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-29T21:59:48Z",
      "side": 1,
      "message": "We need both because we need pidfd to issue the syscall and pid to report the process in the logs (we use pids in all reports).\nI can change to `struct target_proc` though see no real difference.",
      "parentUuid": "dacb93b1_897af64c",
      "range": {
        "startLine": 2214,
        "startChar": 32,
        "endLine": 2214,
        "endChar": 42
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "543b96f4_e6d5d42d",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2214,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T23:34:59Z",
      "side": 1,
      "message": "To me, it sounds like that struct target_proc represents them as single parameter which means fields in the structure are coupled each other, which is exactly the case here. With that, code reader doesn\u0027t need to figure it out how the request_kill function handles two parameters independently(after reading, Oh, they are just same lifetime, tightly coupled!!)",
      "parentUuid": "625a39a3_179cad85",
      "range": {
        "startLine": 2214,
        "startChar": 32,
        "endLine": 2214,
        "endChar": 42
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8952da77_72e104d1",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2214,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T00:05:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "543b96f4_e6d5d42d",
      "range": {
        "startLine": 2214,
        "startChar": 32,
        "endLine": 2214,
        "endChar": 42
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97c88649_71588e62",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2219,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "Why can\u0027t we handle this in request_kill function in reaper class? IOW, reaper could choose the strategy by itself.",
      "range": {
        "startLine": 2219,
        "startChar": 26,
        "endLine": 2219,
        "endChar": 43
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19236311_a31b0f3b",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2219,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-29T21:59:48Z",
      "side": 1,
      "message": "We could, but then the reaper becomes more than a reaper. It becomes the actual killer which might do reaping as well. This is doable, not sure if it\u0027s really better though. I wanted to keep reaper for reaping only.",
      "parentUuid": "97c88649_71588e62",
      "range": {
        "startLine": 2219,
        "startChar": 26,
        "endLine": 2219,
        "endChar": 43
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a3d74ea_8c616d4a",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2219,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T23:34:59Z",
      "side": 1,
      "message": "I wanted to say that. IOW, renaming the reaper with killer. The killer abstract how it could kill. Sometimes, it could use signal, sometimes, process_mrelease. Main thread doesn\u0027t need to understand how the killer will do. So divide the role clear and decouple more and more.",
      "parentUuid": "19236311_a31b0f3b",
      "range": {
        "startLine": 2219,
        "startChar": 26,
        "endLine": 2219,
        "endChar": 43
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48976c49_ed567dcf",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2219,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T00:05:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4a3d74ea_8c616d4a",
      "range": {
        "startLine": 2219,
        "startChar": 26,
        "endLine": 2219,
        "endChar": 43
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef696e30_6af7e36a",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2239,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "It also can move to reaper so if reaper select pidfd_send_signal approach, it can change target\u0027s priority, too.",
      "range": {
        "startLine": 2234,
        "startChar": 0,
        "endLine": 2239,
        "endChar": 5
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "616f7ad3_809d799f",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2239,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-29T21:59:48Z",
      "side": 1,
      "message": "Yeah, if we are moving the whole killing logic into reaper then sure, that makes sense.",
      "parentUuid": "ef696e30_6af7e36a",
      "range": {
        "startLine": 2234,
        "startChar": 0,
        "endLine": 2239,
        "endChar": 5
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "470084e9_760e8c6f",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2239,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T23:34:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "616f7ad3_809d799f",
      "range": {
        "startLine": 2234,
        "startChar": 0,
        "endLine": 2239,
        "endChar": 5
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c36f757_e5e1dbe0",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3192,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T18:58:07Z",
      "side": 1,
      "message": "Create the pipe here instead of inside the reaper.",
      "range": {
        "startLine": 3192,
        "startChar": 4,
        "endLine": 3192,
        "endChar": 45
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fddb62fc_1f84184d",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3192,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-01-02T20:49:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c36f757_e5e1dbe0",
      "range": {
        "startLine": 3192,
        "startChar": 4,
        "endLine": 3192,
        "endChar": 45
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbd38b49_8be26415",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3209,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T18:58:07Z",
      "side": 1,
      "message": "rename into reaper::init(int fd);",
      "range": {
        "startLine": 3209,
        "startChar": 16,
        "endLine": 3209,
        "endChar": 34
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99387eaa_fd778aa8",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3209,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-01-02T20:49:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbd38b49_8be26415",
      "range": {
        "startLine": 3209,
        "startChar": 16,
        "endLine": 3209,
        "endChar": 34
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89a60b77_9d486c3e",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3587,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "How about reaper.init()?\n\nIOW, we can hide all init step in reaper class.",
      "range": {
        "startLine": 3587,
        "startChar": 12,
        "endLine": 3587,
        "endChar": 23
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2eda7a7_e1177187",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3587,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-29T21:59:48Z",
      "side": 1,
      "message": "Kalesh had the same question. init_reaper sets up epoll controls which are not reaper-specific but rather details of how main thread waits for the events. If we move all that into reaper we would have to teach reaper about `struct epoll_event`, `struct event_handler_info`, etc. All these details have nothing to do with process reaping and would introduce more dependencies between reaper and structures main thread uses. So I decided to keep them separate from the reaper.",
      "parentUuid": "89a60b77_9d486c3e",
      "range": {
        "startLine": 3587,
        "startChar": 12,
        "endLine": 3587,
        "endChar": 23
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "269764d5_892def45",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3587,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T23:34:59Z",
      "side": 1,
      "message": "If we need to communicate between main thread and reaper thread, what we need here is \n\nfd \u003d setup_channel() /* To communicate between main thread and reaper */\nreaper.init(fd)\n\nIOW, to me, the communication channel setup is main thread\u0027s role since it\u0027s client of reaper and creating number of threads and notification are reaper\u0027s role.",
      "parentUuid": "d2eda7a7_e1177187",
      "range": {
        "startLine": 3587,
        "startChar": 12,
        "endLine": 3587,
        "endChar": 23
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43da5e9f_67c28b30",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3587,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T00:05:34Z",
      "side": 1,
      "message": "IOW you are suggesting to move Reaper::setup_thread_comm()/Reaper::drop_thread_comm() into main.cpp and rename Reaper::create_thread_pool() into Reaper::init() with additional FD parameter?\n\nFrom your comment it sounded like you want to hide more of this setup into the reaper class but this way we will be moving things from reaper into main. I want to make sure I understood correctly before making the change. Please confirm.",
      "parentUuid": "269764d5_892def45",
      "range": {
        "startLine": 3587,
        "startChar": 12,
        "endLine": 3587,
        "endChar": 23
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "251809de_2e73692b",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3587,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T18:58:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "43da5e9f_67c28b30",
      "range": {
        "startLine": 3587,
        "startChar": 12,
        "endLine": 3587,
        "endChar": 23
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a336f3d2_9dc96ef1",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3589,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "reaper.reaper is redundant.\n\nHow about reaper.thread_count()?",
      "range": {
        "startLine": 3589,
        "startChar": 23,
        "endLine": 3589,
        "endChar": 40
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0f3713b_24cd3d46",
        "filename": "lmkd.cpp",
        "patchSetId": 8
      },
      "lineNbr": 3589,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-29T21:59:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a336f3d2_9dc96ef1",
      "range": {
        "startLine": 3589,
        "startChar": 23,
        "endLine": 3589,
        "endChar": 40
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc043ad4_5d78485b",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T18:58:07Z",
      "side": 1,
      "message": "need C++ cast here.",
      "range": {
        "startLine": 51,
        "startChar": 21,
        "endLine": 51,
        "endChar": 31
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "221e7ed9_9c4b8d11",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-01-02T20:49:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc043ad4_5d78485b",
      "range": {
        "startLine": 51,
        "startChar": 21,
        "endLine": 51,
        "endChar": 31
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dbc92b6_ffb36d91",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "How about \"target_proc\"?",
      "range": {
        "startLine": 53,
        "startChar": 19,
        "endLine": 53,
        "endChar": 30
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8377b509_111e00c8",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T18:58:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5dbc92b6_ffb36d91",
      "range": {
        "startLine": 53,
        "startChar": 19,
        "endLine": 53,
        "endChar": 30
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3098594_9b78c540",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "You can just use debug_logs_enabled_ instead of introducing a function.\n\nAnd how about debug_enabled_?",
      "range": {
        "startLine": 64,
        "startChar": 20,
        "endLine": 64,
        "endChar": 38
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4904ffc_7fa98468",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T18:58:07Z",
      "side": 1,
      "message": "will rename as debug_enabled()",
      "parentUuid": "c3098594_9b78c540",
      "range": {
        "startLine": 64,
        "startChar": 20,
        "endLine": 64,
        "endChar": 38
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e01309a_351f49d7",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-01-02T20:49:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4904ffc_7fa98468",
      "range": {
        "startLine": 64,
        "startChar": 20,
        "endLine": 64,
        "endChar": 38
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75d6cb61_c28a060a",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "If you don\u0027t mind, let\u0027s use goto \n\ngoto close_pidfd;\n\n..\n..\nreaper-\u003erequest_complete();\nclose_pidfd:\n  close(proc.pidfd);",
      "range": {
        "startLine": 71,
        "startChar": 12,
        "endLine": 71,
        "endChar": 29
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "030c5489_07122245",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T18:58:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "75d6cb61_c28a060a",
      "range": {
        "startLine": 71,
        "startChar": 12,
        "endLine": 71,
        "endChar": 29
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c593f68_81b95ac1",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-01-02T20:49:04Z",
      "side": 1,
      "message": "I checked",
      "parentUuid": "030c5489_07122245",
      "range": {
        "startLine": 71,
        "startChar": 12,
        "endLine": 71,
        "endChar": 29
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31070704_8ea55442",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 135,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-29T19:51:55Z",
      "side": 1,
      "message": "We are in Reaper class so prefix reaper is redundant. Let\u0027s use \"thread_count_\"\n\nPersonally, I prefer nr_threads, nr_cpus following kernel programming. Up to you.",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 135,
        "endChar": 10
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89b6a100_51a2b7d9",
        "filename": "reaper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 135,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-30T18:58:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "31070704_8ea55442",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 135,
        "endChar": 10
      },
      "revId": "556e7a08221a24209194654c099a3f5b01af5af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}