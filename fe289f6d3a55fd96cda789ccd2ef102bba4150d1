{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "42f9a5d8_c2ef810d",
        "filename": "lmkd.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3160,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-03-25T19:56:58Z",
      "side": 1,
      "message": "We don\u0027t have \"later\" right now, so why not kV2, smth like:\n\n`enum class MemcgVersion { kNone, kV1, kV2 };`\n\n?",
      "range": {
        "startLine": 3160,
        "startChar": 4,
        "endLine": 3160,
        "endChar": 14
      },
      "revId": "fe289f6d3a55fd96cda789ccd2ef102bba4150d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12a031c6_d241a53f",
        "filename": "lmkd.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3160,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-03-25T23:17:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42f9a5d8_c2ef810d",
      "range": {
        "startLine": 3160,
        "startChar": 4,
        "endLine": 3160,
        "endChar": 14
      },
      "revId": "fe289f6d3a55fd96cda789ccd2ef102bba4150d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fae6976_2daca0d9",
        "filename": "lmkd.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3166,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-03-25T19:56:58Z",
      "side": 1,
      "message": "If v2 memory controller is mounted, will this call return `true`? Not saying it won\u0027t just want to confirm (I assume you ran device with memcg v2 and confirmed the return value).",
      "range": {
        "startLine": 3166,
        "startChar": 4,
        "endLine": 3166,
        "endChar": 58
      },
      "revId": "fe289f6d3a55fd96cda789ccd2ef102bba4150d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c11db8f7_0068d279",
        "filename": "lmkd.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3166,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-03-25T23:17:03Z",
      "side": 1,
      "message": "Yes. I have verified this by adding a debug log statement.",
      "parentUuid": "1fae6976_2daca0d9",
      "range": {
        "startLine": 3166,
        "startChar": 4,
        "endLine": 3166,
        "endChar": 58
      },
      "revId": "fe289f6d3a55fd96cda789ccd2ef102bba4150d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eae5167e_ed6d189e",
        "filename": "lmkd.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3191,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-03-25T19:56:58Z",
      "side": 1,
      "message": "I\u0027m not sure this additional condition should be used here to specify the default for use_new_strategy. Why new strategy should\u0027t be the default for memcg v1? Most devices set `use_minfree_levels\u003dfalse`, so in most cases the default is `true` unless overridden.\n\nSo, do we really need this additional condition?",
      "range": {
        "startLine": 3191,
        "startChar": 53,
        "endLine": 3191,
        "endChar": 96
      },
      "revId": "fe289f6d3a55fd96cda789ccd2ef102bba4150d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "073f461c_6676250b",
        "filename": "lmkd.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3191,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-03-25T23:17:03Z",
      "side": 1,
      "message": "The added code makes the new strategy the default for memcg v2 since the old strategy relies on memcg v1 attributes. Please reopen this comment thread if you want me to change this code.",
      "parentUuid": "eae5167e_ed6d189e",
      "range": {
        "startLine": 3191,
        "startChar": 53,
        "endLine": 3191,
        "endChar": 96
      },
      "revId": "fe289f6d3a55fd96cda789ccd2ef102bba4150d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae9f0f0e_f86e3e6b",
        "filename": "lmkd.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3191,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-03-25T23:47:47Z",
      "side": 1,
      "message": "If old strategy can only be used with memcg v1 then this condition should be checked separately and cause a fatal error like this:\n\n```\nbool use_new_strategy \u003d GET_LMK_PROPERTY(\n            bool, \"use_new_strategy\",\n            low_ram_device || !use_minfree_levels);\nif (!use_new_strategy \u0026\u0026 memcg_version() !\u003d MemcgVersion::kV1) {\n   ALOGE(\"...\");\n   return false;\n}\n```",
      "parentUuid": "073f461c_6676250b",
      "range": {
        "startLine": 3191,
        "startChar": 53,
        "endLine": 3191,
        "endChar": 96
      },
      "revId": "fe289f6d3a55fd96cda789ccd2ef102bba4150d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d01c4cf_21a9c228",
        "filename": "lmkd.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3191,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-03-28T14:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae9f0f0e_f86e3e6b",
      "range": {
        "startLine": 3191,
        "startChar": 53,
        "endLine": 3191,
        "endChar": 96
      },
      "revId": "fe289f6d3a55fd96cda789ccd2ef102bba4150d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}